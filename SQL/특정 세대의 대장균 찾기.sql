-- https://school.programmers.co.kr/learn/courses/30/lessons/301650
-- 3세대의 대장균 ID 출력
-- 대장균 ID에 대해 오름차순 정렬

-- Solution1
WITH G2 AS (
    SELECT G2.ID
    FROM ECOLI_DATA AS G1
    JOIN ECOLI_DATA AS G2
    ON G1.ID = G2.PARENT_ID
    WHERE G1.PARENT_ID IS NULL
), G3 AS (
    SELECT G3.ID
    FROM G2
    JOIN ECOLI_DATA AS G3
    ON G2.ID = G3.PARENT_ID
)

SELECT ID
FROM G3
ORDER BY 1

-- Solution2
SELECT ID
FROM (
    SELECT G3.ID 
    FROM (
        SELECT G2.ID
        FROM ECOLI_DATA AS G1
        JOIN ECOLI_DATA AS G2
        ON G1.ID = G2.PARENT_ID
        WHERE G1.PARENT_ID IS NULL
    ) AS R1
    JOIN ECOLI_DATA AS G3
    ON R1.ID = G3.PARENT_ID
) AS R2
ORDER BY 1

-- Solution3
WITH RECURSIVE CTE AS (
    SELECT G1.ID, 1 AS GEN
    FROM ECOLI_DATA AS G1
    WHERE G1.PARENT_ID IS NULL
    
    UNION ALL
    
    SELECT GN.ID, CTE.GEN + 1
    FROM ECOLI_DATA AS GN 
    JOIN CTE
    ON GN.PARENT_ID = CTE.ID
)

SELECT ID
FROM CTE
WHERE GEN = 3
ORDER BY 1

-- Solution4
SELECT G3.ID
FROM ECOLI_DATA AS G1
JOIN ECOLI_DATA AS G2 ON G1.ID = G2.PARENT_ID
JOIN ECOLI_DATA AS G3 ON G2.ID = G3.PARENT_ID
WHERE G1.PARENT_ID IS NULL
ORDER BY 1
